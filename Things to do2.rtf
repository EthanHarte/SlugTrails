{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red170\green13\blue145;\red63\green110\blue116;\red92\green38\blue153;\red46\green13\blue110;\red38\green71\blue75;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  ViewController.m\cf0 \
\cf2 //  Test-Slug\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Harrison Chen on 1/10/15.\cf0 \
\cf2 //  Copyright (c) 2015 Harrison Chen. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf3 #import \cf4 "ViewController.h"\cf3 \
\cf0 \
\cf5 @interface\cf0  \cf6 ViewController\cf0  ()\
\
\cf5 @property\cf0  (\cf5 strong\cf0 , \cf5 nonatomic\cf0 ) \cf7 NSArray\cf0  *array; \cf2 // all data array\cf0 \
\cf5 @property\cf0  (\cf5 strong\cf0 , \cf5 nonatomic\cf0 ) \cf7 NSArray\cf0  *searchResults; \cf2 // search data array\cf0 \
\
\cf5 @end\cf0 \
\
\cf5 @implementation\cf0  ViewController\
\
- (\cf5 void\cf0 )viewDidLoad \{\
    [\cf5 super\cf0  \cf8 viewDidLoad\cf0 ];\
    \cf5 self\cf0 .\cf6 array\cf0  = [[\cf7 NSArray\cf0  \cf8 alloc\cf0 ] \cf8 initWithObjects\cf0 :\cf4 @"LOL"\cf0 , \cf4 @"WE DAH HACKERZ"\cf0 , \cf4 @"NO Sleep"\cf0 , \cf4 @"HACKALLNITE"\cf0 , \cf5 nil\cf0 ];\
    \cf5 self\cf0 .\cf6 searchResults\cf0  = [[\cf7 NSArray\cf0  \cf8 alloc\cf0 ] \cf8 init\cf0 ];\
\}\
\
- (\cf5 void\cf0 )didReceiveMemoryWarning \{\
    [\cf5 super\cf0  \cf8 didReceiveMemoryWarning\cf0 ];\
    \cf2 // Dispose of any resources that can be recreated.\cf0 \
\}\
\
\cf3 #pragma Table View Methods\
\cf0 \
- (\cf7 NSInteger\cf0 )tableView:(\cf7 UITableView\cf0  *)tableView numberOfRowsInSection:(\cf7 NSInteger\cf0 )section\
\{\
    \cf5 if\cf0  (tableView == \cf5 self\cf0 .\cf7 searchDisplayController\cf0 .\cf7 searchResultsTableView\cf0 )\
    \{\
        \cf2 // return the search result if there was a search\cf0 \
        \cf5 return\cf0  [\cf5 self\cf0 .\cf6 searchResults\cf0  \cf8 count\cf0 ];\
    \}\
    \cf5 else\cf0 \
    \{\
        \cf2 // return all results if no search\cf0 \
        \cf5 return\cf0  [\cf5 self\cf0 .\cf6 array\cf0  \cf8 count\cf0 ];\
    \}\
\cf2 //    return [self.array count];\cf0 \
\}\
\
- (\cf7 UITableViewCell\cf0  *)tableView:(\cf7 UITableView\cf0  *)tableView cellForRowAtIndexPath:(\cf7 NSIndexPath\cf0  *)indexPath\
\{\
    \cf5 static\cf0  \cf7 NSString\cf0  *cellID = \cf4 @"cellID"\cf0 ;\
    \cf7 UITableViewCell\cf0  *cell = [tableView \cf8 dequeueReusableCellWithIdentifier\cf0 :cellID];\
    \cf5 if\cf0  (cell == \cf5 nil\cf0 )\
    \{\
        cell = [[\cf7 UITableViewCell\cf0  \cf8 alloc\cf0 ] \cf8 initWithStyle\cf0 :\cf8 UITableViewCellStyleDefault\cf0  \cf8 reuseIdentifier\cf0 :cellID];\
    \}\
    \
    \cf5 if\cf0  (tableView == \cf5 self\cf0 .searchController.searchResultsTableView)\
    \{\
        \cf2 //\cf0 \
        cell.textLabel.text = [\cf5 self\cf0 .searchResults objectAtIndex:indexPath.row];\
    \}\
    \cf5 else\cf0 \{\
        cell.textLabel.text = [\cf5 self\cf0 .array objectAtIndex:indexPath.row];\
    \}\
    \
\cf2 //    cell.textLabel.text = [self.array objectAtIndex:indexPath.row];\cf0 \
    \cf5 return\cf0  cell;\
\}\
\
\cf3 #pragma Search Methods\
\cf0 \
- (\cf5 void\cf0 )filterContentForSearchText:(\cf7 NSString\cf0  *)searchText scope:(\cf7 NSString\cf0  *)scope\
\{\
    \cf2 // call when we want to search for something\cf0 \
    \cf2 // find all the words that begins with the letters\cf0 \
    \cf7 NSPredicate\cf0  *predicate = [\cf7 NSPredicate\cf0  \cf8 predicateWithFormat\cf0 :\cf4 @"SELF beginwith[c] %@"\cf0 , searchText];\
    \cf2 // fill searhc result array with filter content\cf0 \
    \cf5 self\cf0 .\cf6 searchResults\cf0  = [\cf5 self\cf0 .\cf6 array\cf0  \cf8 filteredArrayUsingPredicate\cf0 :predicate];\
\}\
\
-(\cf5 BOOL\cf0 )searchDisplayController:(\cf7 UISearchController\cf0  *)controller shouldReloadTableForSearchString:(\cf7 NSString\cf0  *)searchString\
\{\
    \cf2 // Call when it needs to update table view\cf0 \
    [\cf5 self\cf0  \cf9 filterContentForSearchText\cf0 :searchString \cf9 scope\cf0 :[[\cf5 self\cf0 .\cf7 searchResultsController\cf0 .\cf7 searchBar\cf0  \cf8 scopeButtonTitles\cf0 ] \cf8 objectAtIndex\cf0 :[\cf5 self\cf0 .\cf7 searchResultsController\cf0 .\cf7 searchBar\cf0  \cf8 selectedScopeButtonIndex\cf0 ]]];\
    \cf5 return\cf0  \cf5 YES\cf0 ;\
\}\
\cf5 @end\cf0 \
}